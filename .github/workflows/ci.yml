name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        java-version: [21]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        cache: maven
    
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Validate Maven project
      run: mvn validate
      working-directory: ./Sample-Repo
    
    - name: Compile project
      run: mvn compile
      working-directory: ./Sample-Repo
    
    - name: Run tests
      run: mvn test
      working-directory: ./Sample-Repo
    
    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Maven Tests (JDK ${{ matrix.java-version }})
        path: 'Sample-Repo/target/surefire-reports/*.xml'
        reporter: java-junit
        fail-on-error: true
    
    - name: Build package
      run: mvn -B -DskipTests clean package
      working-directory: ./Sample-Repo
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: matrix.java-version == '21'
      with:
        name: jar-artifact
        path: Sample-Repo/target/*.jar
        retention-days: 30

  deliver:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: jar-artifact
        path: Sample-Repo/target/
    
    - name: Install to local repository
      run: |
        echo "Installing Maven-built Java application to local Maven repository"
        mvn jar:jar install:install help:evaluate -Dexpression=project.name
      working-directory: ./Sample-Repo
    
    - name: Extract project information
      id: project-info
      run: |
        echo "Extracting project name and version"
        NAME=$(mvn -q -DforceStdout help:evaluate -Dexpression=project.name)
        VERSION=$(mvn -q -DforceStdout help:evaluate -Dexpression=project.version)
        echo "PROJECT_NAME=$NAME" >> $GITHUB_OUTPUT
        echo "PROJECT_VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Project: $NAME"
        echo "Version: $VERSION"
      working-directory: ./Sample-Repo
    
    - name: Run application
      run: |
        echo "Running the Java application"
        java -jar target/${{ steps.project-info.outputs.PROJECT_NAME }}-${{ steps.project-info.outputs.PROJECT_VERSION }}.jar
      working-directory: ./Sample-Repo

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    
    - name: Run OWASP Dependency Check
      run: |
        mvn org.owasp:dependency-check-maven:check
      working-directory: ./Sample-Repo
      continue-on-error: true
    
    - name: Upload OWASP Dependency Check results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: owasp-dependency-check-report
        path: Sample-Repo/target/dependency-check-report.html
        retention-days: 30
